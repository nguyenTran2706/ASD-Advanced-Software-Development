trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  # CHANGE THESE VALUES
  azureServiceConnection: 'My-Azure-RM'
  resourceGroup: 'my-rg'
  webAppName: 'my-node-webapp'
  nodeVersion: '20.x'
  artifactZip: 'app.zip'

steps:
# --- Setup Node.js ---
- task: NodeTool@0
  inputs:
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

# --- Install deps ---
- script: npm ci
  displayName: 'Install dependencies'

# --- Install test reporter for Azure DevOps ---
- script: npm install --no-save jest-junit
  displayName: 'Install jest-junit reporter'

# --- Run Jest tests + publish results ---
- script: |
    mkdir -p $(Build.SourcesDirectory)/test-results
    export JEST_JUNIT_OUTPUT=$(Build.SourcesDirectory)/test-results/junit.xml
    npx jest --ci --reporters=default --reporters=jest-junit
  displayName: 'Run unit tests (Jest â†’ JUnit)'

- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Build.SourcesDirectory)/test-results/*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

# --- Package app for deployment ---
- script: |
    mkdir -p deploy-src
    rsync -av --delete \
      --exclude '.git' \
      --exclude 'node_modules' \
      --exclude 'test' \
      --exclude 'coverage' \
      ./ deploy-src/
    cd deploy-src
    zip -r ../$(Build.ArtifactStagingDirectory)/$(artifactZip) .
  displayName: 'Prepare zip for deployment'

# --- Configure App Service build settings (so Azure builds your Node app) ---
- task: AzureCLI@2
  displayName: 'Configure App Service build settings'
  inputs:
    azureSubscription: '$(azureServiceConnection)'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az webapp config appsettings set \
        --resource-group "$(resourceGroup)" \
        --name "$(webAppName)" \
        --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true WEBSITE_NODE_DEFAULT_VERSION=$(nodeVersion)

# --- Deploy to Azure App Service ---
- task: AzureWebApp@1
  displayName: 'Deploy to Azure App Service'
  inputs:
    azureSubscription: '$(azureServiceConnection)'
    appType: 'webAppLinux'
    appName: '$(webAppName)'
    package: '$(Build.ArtifactStagingDirectory)/$(artifactZip)'
